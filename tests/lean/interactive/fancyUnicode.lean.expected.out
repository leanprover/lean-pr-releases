{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 17}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 13}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 15}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 24}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 31}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 5}}
[{"range":
  {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 7}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 29}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 24}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 31}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 31}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.text "∃ ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "s"),
                             Lean.Widget.TaggedText.text ", ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "s"),
                                   Lean.Widget.TaggedText.text " = ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"🇩🇰\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{ goals := #[] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 3}}
[]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 4}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 29}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 7}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 29}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 8}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "«🍋»"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"le\""),
                                   Lean.Widget.TaggedText.text " ++ ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"mon\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 23}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 15}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 19}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 44}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 51}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 5}}
[{"range":
  {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 7}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 47}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 44}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 51}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 51}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.text "∃ ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "s"),
                             Lean.Widget.TaggedText.text ", ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "s"),
                                   Lean.Widget.TaggedText.text " = ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"🇩🇰\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{ goals := #[] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 3}}
[]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 4}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 12}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 12}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 33}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 10}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 12}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 12}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 33}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 12}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "«🍋»"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"le\""),
                                   Lean.Widget.TaggedText.text " ++ ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"mon\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 17}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 13}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 15}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 24}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 31}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 5}}
[{"range":
  {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 7}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 29}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 24}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 31}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 31}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.text "∃ ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "s"),
                             Lean.Widget.TaggedText.text ", ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "s"),
                                   Lean.Widget.TaggedText.text " = ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"🇩🇰\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{ goals := #[] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 3}}
[]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 4}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 29}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 7}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 8}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 29}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 8}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "«🍋»"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"le\""),
                                   Lean.Widget.TaggedText.text " ++ ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"mon\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 14}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 12}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 13}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 14}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 21}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 5}}
[{"range":
  {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 7}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 20}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 14}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 21}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 21}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.text "∃ ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "s"),
                             Lean.Widget.TaggedText.text ", ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "s"),
                                   Lean.Widget.TaggedText.text " = ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"🇩🇰\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{ goals := #[] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 3}}
[]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 4}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 28}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 6}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 28}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 7}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "«🍋»"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"le\""),
                                   Lean.Widget.TaggedText.text " ++ ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"mon\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 14}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 8, "character": 12}}
{"items": [{"label": "𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟𝓟", "kind": 21, "detail": "Nat"}],
 "isIncomplete": true}
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 13}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 14}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 21}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 5}}
[{"range":
  {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 7}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 20}}
[{"range":
  {"start": {"line": 5, "character": 4}, "end": {"line": 5, "character": 14}},
  "kind": 1},
 {"range":
  {"start": {"line": 12, "character": 11},
   "end": {"line": 12, "character": 21}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 12, "character": 21}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.text "∃ ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "s"),
                             Lean.Widget.TaggedText.text ", ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "s"),
                                   Lean.Widget.TaggedText.text " = ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"🇩🇰\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := some "wasChanged" }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := some false,
               isRemoved? := none,
               hyps := #[] }] }

{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "?w"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "\"🇩🇰\"")]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] },
             { type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.text "String"),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

{ goals := #[] }

{ goals := #[] }

{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 3}}
[]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 4}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 28}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 6}}
[{"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 26, "character": 4}, "end": {"line": 26, "character": 7}},
  "kind": 1},
 {"range":
  {"start": {"line": 33, "character": 25},
   "end": {"line": 33, "character": 28}},
  "kind": 1}]
{"textDocument": {"uri": "file://fancyUnicode.lean"},
 "position": {"line": 26, "character": 7}}
[]
{ goals := #[{ type := Lean.Widget.TaggedText.tag
                         { subexprPos := "/", diffStatus? := none }
                         (Lean.Widget.TaggedText.append
                           #[Lean.Widget.TaggedText.tag
                               { subexprPos := "/0/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.text "«🍋»"),
                             Lean.Widget.TaggedText.text " = ",
                             Lean.Widget.TaggedText.tag
                               { subexprPos := "/1", diffStatus? := none }
                               (Lean.Widget.TaggedText.append
                                 #[Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/0/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"le\""),
                                   Lean.Widget.TaggedText.text " ++ ",
                                   Lean.Widget.TaggedText.tag
                                     { subexprPos := "/1/1", diffStatus? := none }
                                     (Lean.Widget.TaggedText.text "\"mon\"")])]),
               isInserted? := none,
               isRemoved? := some true,
               hyps := #[] }] }

{ goals := #[] }

